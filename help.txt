cvetest(master=)$ pwd
/Users/greg/Dropbox/projects/cvetest
cvetest(master=)$ ls
README		directory1	file1.txt	help.txt	log_file.txt
cvetest(master=)$ cd directory1
directory1(master=)$ ls
file2.txt
directory1(master=)$ cat file2.txt
this is a file in a directory
directory1(master=)$ cd ..
cvetest(master=)$ ls
README		directory1	file1.txt	help.txt	log_file.txt
cvetest(master=)$ cat > some_file.txt # create or edit a file in this directory any way you want
this is some text. Normally, you'd create these files using whatever editor you want.                      
cvetest(master=)$ ls
README		directory1	file1.txt	help.txt	log_file.txt	some_file.txt
cvetest(master=)$ git status
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	help.txt
#	some_file.txt
nothing added to commit but untracked files present (use "git add" to track)
cvetest(master=)$ git add some_file.txt
cvetest(master +=)$ git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	new file:   some_file.txt
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	help.txt
cvetest(master +=)$ git commit -m "some_file.txt added"
[master fb211ca] some_file.txt added
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 some_file.txt
cvetest(master>)$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	help.txt
nothing added to commit but untracked files present (use "git add" to track)
cvetest(master>)$ git add help.txt
cvetest(master +>)$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	new file:   help.txt
#
cvetest(master +>)$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	new file:   help.txt
#
cvetest(master +>)$ git showbranch
git: 'showbranch' is not a git command. See 'git --help'.

Did you mean this?
	show-branch
cvetest(master +>)$ git show-branch
[master] some_file.txt added
cvetest(master +>)$ git push
Counting objects: 4, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 357 bytes, done.
Total 3 (delta 1), reused 0 (delta 0)
To git@github.com:edwards1945/cvetest.git
   be0da3b..fb211ca  master -> master
cvetest(master +=)$ git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	new file:   help.txt
#
cvetest(master +=)$ 


